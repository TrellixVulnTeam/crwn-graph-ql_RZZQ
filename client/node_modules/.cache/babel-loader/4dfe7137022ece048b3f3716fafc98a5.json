{"ast":null,"code":"var _jsxFileName = \"/Users/stevendeavila/complete-react-21/crwn-graph-ql/client/src/pages/collection/collection.container.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { Query } from '@apollo/client/react/components';\nimport CollectionPage from './collection.component';\nimport Spinner from '../../components/spinner/spinner.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_COLLECTION_BY_TITLE = gql`\n  query getCollectionsByTitle($title: String!) {\n    getCollectionsByTitle(title: $title) {\n      id\n      title\n      items {\n        id\n        name\n        price\n        imageUrl\n      }\n    }\n  }\n`;\n\nconst CollectionPageContainer = ({\n  match\n}) => {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_COLLECTION_BY_TITLE, {\n    variables: {\n      title: match.params.collectionId\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 23\n  }, this);\n  const {\n    getCollectionsByTitle\n  } = data; // const { title, items } = getCollectionsByTitle;\n\n  console.log(match);\n  return /*#__PURE__*/_jsxDEV(CollectionPage, {\n    collection: getCollectionsByTitle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CollectionPageContainer, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = CollectionPageContainer;\nexport default CollectionPageContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CollectionPageContainer\");","map":{"version":3,"sources":["/Users/stevendeavila/complete-react-21/crwn-graph-ql/client/src/pages/collection/collection.container.jsx"],"names":["React","gql","useQuery","Query","CollectionPage","Spinner","GET_COLLECTION_BY_TITLE","CollectionPageContainer","match","loading","error","data","variables","title","params","collectionId","getCollectionsByTitle","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,KAAT,QAAsB,iCAAtB;AAEA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,OAAP,MAAoB,4CAApB;;AAEA,MAAMC,uBAAuB,GAAGL,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;;AAeA,MAAMM,uBAAuB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AAC7C,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BT,QAAQ,CAACI,uBAAD,EAA0B;AACjEM,IAAAA,SAAS,EAAE;AAAEC,MAAAA,KAAK,EAAEL,KAAK,CAACM,MAAN,CAAaC;AAAtB;AADsD,GAA1B,CAAzC;AAIA,MAAIN,OAAJ,EAAa,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AAEb,QAAM;AAAEO,IAAAA;AAAF,MAA4BL,IAAlC,CAP6C,CAQ7C;;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACA,sBAAO,QAAC,cAAD;AAAgB,IAAA,UAAU,EAAEQ;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAXD;;GAAMT,uB;UAC6BL,Q;;;KAD7BK,uB;AAaN,eAAeA,uBAAf","sourcesContent":["import React from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { Query } from '@apollo/client/react/components';\n\nimport CollectionPage from './collection.component';\nimport Spinner from '../../components/spinner/spinner.component';\n\nconst GET_COLLECTION_BY_TITLE = gql`\n  query getCollectionsByTitle($title: String!) {\n    getCollectionsByTitle(title: $title) {\n      id\n      title\n      items {\n        id\n        name\n        price\n        imageUrl\n      }\n    }\n  }\n`;\n\nconst CollectionPageContainer = ({ match }) => {\n  const { loading, error, data } = useQuery(GET_COLLECTION_BY_TITLE, {\n    variables: { title: match.params.collectionId }\n  });\n\n  if (loading) return <Spinner />;\n\n  const { getCollectionsByTitle } = data;\n  // const { title, items } = getCollectionsByTitle;\n  console.log(match);\n  return <CollectionPage collection={getCollectionsByTitle} />;\n};\n\nexport default CollectionPageContainer;\n"]},"metadata":{},"sourceType":"module"}