{"ast":null,"code":"var _jsxFileName = \"/Users/stevendeavila/complete-react-21/crwn-graph-ql/client/src/pages/collection/collection.container.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { Query } from '@apollo/client/react/components'; // import CollectionPage from './collection.component';\n// import Spinner from '../../components/spinner/spinner.component';\n\nimport CollectionItem from '../../components/collection-item/collection-item.component';\nimport Spinner from '../../components/spinner/spinner.component';\nimport './collection.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_COLLECTION_BY_TITLE = gql`\n  query getCollectionsByTitle($title: String!) {\n    getCollectionsByTitle(title: $title) {\n      id\n      title\n      items {\n        id\n        name\n        price\n        imageUrl\n      }\n    }\n  }\n`;\n\nconst CollectionPage = ({\n  match\n}) => {\n  _s();\n\n  const {\n    loading,\n    data\n  } = useQuery(GET_COLLECTION_BY_TITLE, {\n    variables: {\n      title: match.params.collectionId\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 23\n  }, this);\n  const {\n    getCollectionsByTitle\n  } = data;\n  const {\n    title,\n    items\n  } = getCollectionsByTitle;\n  if (data) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"collection-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items\",\n      children: items.map(item => /*#__PURE__*/_jsxDEV(CollectionItem, {\n        item: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n};\n\n_s(CollectionPage, \"HasvTXHwlBNedvPpf4Gl00Z2xbw=\", false, function () {\n  return [useQuery];\n});\n\n_c = CollectionPage;\nexport default CollectionPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CollectionPage\");","map":{"version":3,"sources":["/Users/stevendeavila/complete-react-21/crwn-graph-ql/client/src/pages/collection/collection.container.jsx"],"names":["React","gql","useQuery","Query","CollectionItem","Spinner","GET_COLLECTION_BY_TITLE","CollectionPage","match","loading","data","variables","title","params","collectionId","getCollectionsByTitle","items","map","item","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,KAAT,QAAsB,iCAAtB,C,CAEA;AACA;;AAEA,OAAOC,cAAP,MAA2B,4DAA3B;AAEA,OAAOC,OAAP,MAAoB,4CAApB;AAEA,OAAO,0BAAP;;AAEA,MAAMC,uBAAuB,GAAGL,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;;AAeA,MAAMM,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AACpC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBR,QAAQ,CAACI,uBAAD,EAA0B;AAC1DK,IAAAA,SAAS,EAAE;AAAEC,MAAAA,KAAK,EAAEJ,KAAK,CAACK,MAAN,CAAaC;AAAtB;AAD+C,GAA1B,CAAlC;AAIA,MAAIL,OAAJ,EAAa,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AAEb,QAAM;AAAEM,IAAAA;AAAF,MAA4BL,IAAlC;AACA,QAAM;AAAEE,IAAAA,KAAF;AAASI,IAAAA;AAAT,MAAmBD,qBAAzB;AAEA,MAAIL,IAAJ,EACE,oBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA,gBAAuBE;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBACGI,KAAK,CAACC,GAAN,CAAWC,IAAD,iBACT,QAAC,cAAD;AAA8B,QAAA,IAAI,EAAEA;AAApC,SAAqBA,IAAI,CAACC,EAA1B;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUH,CArBD;;GAAMZ,c;UACsBL,Q;;;KADtBK,c;AAuBN,eAAeA,cAAf","sourcesContent":["import React from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { Query } from '@apollo/client/react/components';\n\n// import CollectionPage from './collection.component';\n// import Spinner from '../../components/spinner/spinner.component';\n\nimport CollectionItem from '../../components/collection-item/collection-item.component';\n\nimport Spinner from '../../components/spinner/spinner.component';\n\nimport './collection.styles.scss';\n\nconst GET_COLLECTION_BY_TITLE = gql`\n  query getCollectionsByTitle($title: String!) {\n    getCollectionsByTitle(title: $title) {\n      id\n      title\n      items {\n        id\n        name\n        price\n        imageUrl\n      }\n    }\n  }\n`;\n\nconst CollectionPage = ({ match }) => {\n  const { loading, data } = useQuery(GET_COLLECTION_BY_TITLE, {\n    variables: { title: match.params.collectionId }\n  });\n\n  if (loading) return <Spinner />;\n\n  const { getCollectionsByTitle } = data;\n  const { title, items } = getCollectionsByTitle;\n\n  if (data)\n    return (\n      <div className='collection-page'>\n        <h2 className='title'>{title}</h2>\n        <div className='items'>\n          {items.map((item) => (\n            <CollectionItem key={item.id} item={item} />\n          ))}\n        </div>\n      </div>\n    );\n};\n\nexport default CollectionPage;\n"]},"metadata":{},"sourceType":"module"}