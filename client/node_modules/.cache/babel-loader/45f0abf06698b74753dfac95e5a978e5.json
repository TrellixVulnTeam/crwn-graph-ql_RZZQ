{"ast":null,"code":"var _jsxFileName = \"/Users/stevendeavila/complete-react-21/crwn-graph-ql/client/src/pages/collection/collection.container.jsx\";\nimport React from 'react';\n\nconst {\n  gql\n} = require('apollo-server');\n\nimport { Query } from '@apollo/client/react/components';\nimport CollectionPage from './collection.component';\nimport Spinner from '../../components/spinner/spinner.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_COLLECTION_BY_TITLE = gql`\n  query getCollectionsByTitle($title: String!) {\n    getCollectionsByTitle(title: $title) {\n      id\n      title\n      items {\n        id\n        name\n        price\n        imageUrl\n      }\n    }\n  }\n`;\n\nconst CollectionPageContainer = ({\n  match\n}) => /*#__PURE__*/_jsxDEV(Query, {\n  query: GET_COLLECTION_BY_TITLE,\n  variables: {\n    title: match.params.collectionId\n  },\n  children: ({\n    loading,\n    data\n  }) => {\n    if (loading) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 27\n    }, this);\n    const {\n      getCollectionsByTitle\n    } = data;\n    return /*#__PURE__*/_jsxDEV(CollectionPage, {\n      collection: getCollectionsByTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 14\n    }, this);\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 3\n}, this);\n\n_c = CollectionPageContainer;\nexport default CollectionPageContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CollectionPageContainer\");","map":{"version":3,"sources":["/Users/stevendeavila/complete-react-21/crwn-graph-ql/client/src/pages/collection/collection.container.jsx"],"names":["React","gql","require","Query","CollectionPage","Spinner","GET_COLLECTION_BY_TITLE","CollectionPageContainer","match","title","params","collectionId","loading","data","getCollectionsByTitle"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAUC,OAAO,CAAC,eAAD,CAAvB;;AACA,SAASC,KAAT,QAAsB,iCAAtB;AAEA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,OAAP,MAAoB,4CAApB;;AAEA,MAAMC,uBAAuB,GAAGL,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;;AAeA,MAAMM,uBAAuB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBAC9B,QAAC,KAAD;AACE,EAAA,KAAK,EAAEF,uBADT;AAEE,EAAA,SAAS,EAAE;AAAEG,IAAAA,KAAK,EAAED,KAAK,CAACE,MAAN,CAAaC;AAAtB,GAFb;AAAA,YAIG,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAD,KAAuB;AACtB,QAAID,OAAJ,EAAa,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACb,UAAM;AAAEE,MAAAA;AAAF,QAA4BD,IAAlC;AACA,wBAAO,QAAC,cAAD;AAAgB,MAAA,UAAU,EAAEC;AAA5B;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AARH;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMP,uB;AAaN,eAAeA,uBAAf","sourcesContent":["import React from 'react';\nconst { gql } = require('apollo-server');\nimport { Query } from '@apollo/client/react/components';\n\nimport CollectionPage from './collection.component';\nimport Spinner from '../../components/spinner/spinner.component';\n\nconst GET_COLLECTION_BY_TITLE = gql`\n  query getCollectionsByTitle($title: String!) {\n    getCollectionsByTitle(title: $title) {\n      id\n      title\n      items {\n        id\n        name\n        price\n        imageUrl\n      }\n    }\n  }\n`;\n\nconst CollectionPageContainer = ({ match }) => (\n  <Query\n    query={GET_COLLECTION_BY_TITLE}\n    variables={{ title: match.params.collectionId }}\n  >\n    {({ loading, data }) => {\n      if (loading) return <Spinner />;\n      const { getCollectionsByTitle } = data;\n      return <CollectionPage collection={getCollectionsByTitle} />;\n    }}\n  </Query>\n);\n\nexport default CollectionPageContainer;\n"]},"metadata":{},"sourceType":"module"}