{"ast":null,"code":"var _jsxFileName = \"/Users/stevendeavila/complete-react-21/crwn-graph-ql/client/src/pages/collection/collection.container.jsx\";\nimport React from 'react';\nimport { Query } from '@apollo/client/react/components';\nimport { gql } from '@apollo/client';\nimport CollectionPage from './collection.component';\nimport Spinner from '../../components/spinner/spinner.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_COLLECTION_BY_TITLE = gql`\n  query getCollectionsByTitle($title: String!) {\n    getCollectionsByTitle(title: $title) {\n      id\n      title\n      items {\n        id\n        name\n        price\n        imageUrl\n      }\n    }\n  }\n`;\n\nconst CollectionPageContainer = ({\n  match\n}) => /*#__PURE__*/_jsxDEV(Query, {\n  query: GET_COLLECTION_BY_TITLE,\n  variables: {\n    title: match.params.collectionId\n  },\n  children: ({\n    loading,\n    data\n  }) => {\n    return loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CollectionPage, {\n      collection: data.getCollectionsByTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this);\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 3\n}, this);\n\n_c = CollectionPageContainer;\nexport default CollectionPageContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CollectionPageContainer\");","map":{"version":3,"sources":["/Users/stevendeavila/complete-react-21/crwn-graph-ql/client/src/pages/collection/collection.container.jsx"],"names":["React","Query","gql","CollectionPage","Spinner","GET_COLLECTION_BY_TITLE","CollectionPageContainer","match","title","params","collectionId","loading","data","getCollectionsByTitle"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,iCAAtB;AACA,SAASC,GAAT,QAAoB,gBAApB;AAEA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,OAAP,MAAoB,4CAApB;;AAEA,MAAMC,uBAAuB,GAAGH,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;;AAeA,MAAMI,uBAAuB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBAC9B,QAAC,KAAD;AACE,EAAA,KAAK,EAAEF,uBADT;AAEE,EAAA,SAAS,EAAE;AAAEG,IAAAA,KAAK,EAAED,KAAK,CAACE,MAAN,CAAaC;AAAtB,GAFb;AAAA,YAIG,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAD,KAAuB;AACtB,WAAOD,OAAO,gBACZ,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADY,gBAGZ,QAAC,cAAD;AAAgB,MAAA,UAAU,EAAEC,IAAI,CAACC;AAAjC;AAAA;AAAA;AAAA;AAAA,YAHF;AAKD;AAVH;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMP,uB;AAeN,eAAeA,uBAAf","sourcesContent":["import React from 'react';\nimport { Query } from '@apollo/client/react/components';\nimport { gql } from '@apollo/client';\n\nimport CollectionPage from './collection.component';\nimport Spinner from '../../components/spinner/spinner.component';\n\nconst GET_COLLECTION_BY_TITLE = gql`\n  query getCollectionsByTitle($title: String!) {\n    getCollectionsByTitle(title: $title) {\n      id\n      title\n      items {\n        id\n        name\n        price\n        imageUrl\n      }\n    }\n  }\n`;\n\nconst CollectionPageContainer = ({ match }) => (\n  <Query\n    query={GET_COLLECTION_BY_TITLE}\n    variables={{ title: match.params.collectionId }}\n  >\n    {({ loading, data }) => {\n      return loading ? (\n        <Spinner />\n      ) : (\n        <CollectionPage collection={data.getCollectionsByTitle} />\n      );\n    }}\n  </Query>\n);\n\nexport default CollectionPageContainer;\n"]},"metadata":{},"sourceType":"module"}